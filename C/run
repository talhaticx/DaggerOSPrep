#!/bin/bash

# # Define the compiler and flags
# CC = gcc
# CFLAGS = -Wall -Wextra -Wshadow -O2

# # Define the target executable name
# EXEC = main

# # Define the source and object files
# SRC = src/main.c src/contact.c
# OBJ = src/main.o src/contact.o

# # Default target to build the executable
# all: $(EXEC)

# # Rule to link object files into the executable
# $(EXEC): $(OBJ)
# 	$(CC) $(CFLAGS) -o $@ $(OBJ)

# # Rule to compile the source files into object files
# src/%.o: src/%.c
# 	$(CC) $(CFLAGS) -c $< -o $@

# # Clean up generated files
# clean:
# 	rm -f $(OBJ) $(EXEC)

# # Phony targets
# .PHONY: all clean


# Define the compiler and flags
CC="gcc"
CFLAGS="-Wall -Wextra -Wshadow -O2"

# Define the target executable name
EXEC="main"

# Define the source and object files
SRC=("src/main.c" "src/contact.c" "src/file_io.c")
OBJ=("src/main.o" "src/contact.o" "src/file_io.o")

# Function to compile source files into object files
compile() {
  for i in "${!SRC[@]}"; do
    $CC $CFLAGS -c "${SRC[$i]}" -o "${OBJ[$i]}"
  done
}

# Function to link object files into the executable
link() {
  $CC $CFLAGS -o $EXEC "${OBJ[@]}"
}

# Function to clean up generated files
clean() {
  rm -f "${OBJ[@]}"
}

compile
link

# echo "Executable '$EXEC' built successfully!"
clean

./$EXEC